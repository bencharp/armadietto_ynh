#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

# Fix is_public as a boolean value
if [ "$is_public" = "Yes" ]; then
    ynh_app_setting_set $app is_public 1
    is_public=1
elif [ "$is_public" = "No" ]; then
    ynh_app_setting_set $app is_public 0
    is_public=0
fi

# If final_path doesn't exist, create it
if [ -z $final_path ]; then
    final_path=/var/www/$app
    ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
    # restore it if the upgrade fails
    ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path $path_url)

#=================================================
# STOP ARMADIETTO
#=================================================

systemctl stop $app

#=================================================
# STANDARD UPGRADE STEPS
#=================================================


#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a dedicated user (if not existing)
ynh_system_user_create $app

#=================================================
# NODE SERVER CONFIGURATION
#=================================================


#=================================================
# SPECIFIC UPGRADE
#=================================================
# ...
#=================================================

### Verify the checksum of a file, stored by `ynh_store_file_checksum` in the install script.
### And create a backup of this file if the checksum is different. So the file will be backed up if the admin had modified it.
ynh_backup_if_checksum_is_different "$final_path/CONFIG_FILE"
# Recalculate and store the checksum of the file for the next upgrade.
ynh_store_file_checksum "$final_path/CONFIG_FILE"

#=================================================
# SETUP LOGROTATE
#=================================================

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# SETUP SYSTEMD
#=================================================

# Create a dedicated systemd config
ynh_replace_string "__NODEPATH__" "$nodejs_path"      "../conf/systemd.service"
ynh_replace_string "__ENV_PATH__" "$PATH"             "../conf/systemd.service"
ynh_replace_string "__FINALPATH__" "$final_path"      "../conf/systemd.service"

ynh_add_systemd_config

PATH=$nodejs_path:$PATH

#=================================================
# SETUP ARMADIETTO OPTIONS & CREATE DIRECTORY FOR DATA
#=================================================

# Define armadietto module path
modulepath="$node_version_path/$nodejs_version/lib/node_modules/armadietto/lib/"

# Define app's data directory
datadir="/home/yunohost.app/${app}/storage"

# Create app folders
mkdir -p "$datadir"

ynh_replace_string "__MODULE_PATH__"    "$modulepath"   "../conf/server.js"
ynh_replace_string "__DATADIR__"        "$datadir"      "../conf/server.js"
ynh_replace_string "__PORT__"           "$port"   "../conf/server.js"

cp ../conf/server.js "$final_path/server.js"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# START ARMADIETTO
#=================================================

systemctl start $app

#=================================================
# SETUP SSOWAT
#=================================================

# Make app public if necessary
if [ $is_public -eq 1 ]
then
    # unprotected_uris allows SSO credentials to be passed anyway
    ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
