#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
is_signup=$YNH_APP_ARG_IS_SIGNUP

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --time --weight=1

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

if [ "$path_url" != "/" ]; then
    ynh_die "Only / is allowed"
fi

# Check web path availability
ynh_webpath_available --domain=$domain --path_url=$path_url
# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set $app domain "$domain"
ynh_app_setting_set $app path "$path_url"
ynh_app_setting_set $app is_public "$is_public"
ynh_app_setting_set $app is_signup "$is_signup"

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=is_signup --value=$is_signup

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Configuring firewall ..." --time --weight=1

# Find a free port
port=$(ynh_find_port 8008)
# Open this port
ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $port
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --time --weight=1

nodejs_version=10

ynh_install_nodejs -n $nodejs_version

#=================================================
# CHECK AND CREATE FINAL_PATH
#=================================================

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
# ynh_setup_source --dest_dir="$final_path"

# Create final_path
mkdir -p "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --time --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --time --weight=1

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# SPECIFIC SETUP
#=================================================
# ADD SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --time --weight=1

ynh_replace_string --match_string="__NODEJS_PATH__"	--replace_string="$nodejs_path"	--target_file="../conf/systemd.service"
ynh_replace_string --match_string="__ENV_PATH__"	--replace_string="$PATH"		--target_file="../conf/systemd.service"
ynh_replace_string --match_string="__FINALPATH__"	--replace_string="$final_path"	--target_file="../conf/systemd.service"

ynh_add_systemd_config

# PATH=$nodejs_path:$PATH

#=================================================
# DEFINE ARMADIETTO OPTIONS & CREATE DIRECTORY FOR DATA
#=================================================
ynh_script_progression --message="Configuring armadietto options..." --time --weight=1

# Define armadietto module path
modulepath="$node_version_path/$nodejs_version/lib/node_modules/armadietto/lib"

# Define app's data directory
datadir="/home/yunohost.app/${app}/storage"

# Create app folders
mkdir -p "$datadir"

cp -f ../conf/server.js "$final_path/server.js"

ynh_replace_string --match_string="__MODULE_PATH__"	--replace_string="$modulepath"	--target_file="$final_path/server.js"
ynh_replace_string --match_string="__DATADIR__"		--replace_string="$datadir"		--target_file="$final_path/server.js"
ynh_replace_string --match_string="__PORT__"		--replace_string="$port"		--target_file="$final_path/server.js"
ynh_replace_string --match_string="__DOMAIN__"		--replace_string="$domain"		--target_file="$final_path/server.js"
ynh_replace_string --match_string="__SIGNUP__"		--replace_string="$is_signup"	--target_file="$final_path/server.js"


#=================================================
# STORE CONFIG FILES CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/server.js"

#=================================================
# INSTALL ARMADIETTO
#=================================================
ynh_script_progression --message="Install armadietto with npm..." --time --weight=1

ynh_use_nodejs
cd $final_path
npm -g i armadietto

ynh_script_progression --message="Armadietto installed..." --time --weight=1

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Secure files and directories" --time --weight=1

# Set permissions to app files
chown -R $app:$app "$final_path"
chmod 0700 $datadir && chown $app:$app $datadir

#=================================================
# ADD SERVICE IN ADMIN PANEL
#=================================================

# if using yunohost version 3.2 or more in the 'manifest.json', a description can be added
yunohost service add $app --description "$app daemon" -t systemd

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."  --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload 

#=================================================
# START ARMADIETTO
#=================================================
ynh_script_progression --message="Start armadietto web server..."  --time --weight=1

ynh_systemd_action --service_name=$app --action=start

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last